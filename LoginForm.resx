<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>